 public class Solution {

    
    // 3 2
    public static boolean isValid(int mat[][],int row,int col,int ele){
        for(int i=0;i<9;i++){
            if(mat[i][col]==ele){
                return false;
            }
            if(mat[row][i]==ele){
                return false;
            }
            if(mat[3*(row/3)+(i/3)][3*(col/3)+(i%3)]==ele){
                return false;
            }
        }
        return true;
    }
        
    
	public static boolean isItSudoku(int matrix[][]) {
        
        
        for(int i=0;i<matrix.length;i++){
            for(int j=0;j<matrix[0].length;j++){
                if(matrix[i][j]==0){
                    for(int k=1;k<=9;k++){
                        if(isValid(matrix,i,j,k)==true){
                            matrix[i][j]=k;
                            if(isItSudoku(matrix)==true){
                                return true;
                            }
                            else{
                                matrix[i][j]=0;
                            }
                        }
                    }
                    return false;
                }
            }
        }
        return true;
        
		 

	}
}

Tc-O(9^m)- m->number of blank spaces
Sc-O(1)
