class Solution {
    
    public void sum_find(int []arr,int tar,int ind,List<List<Integer>> ans ,List<Integer> ds){
        if(ind==arr.length){
            if(tar==0){
                ans.add(new ArrayList<>(ds));
            }
            return;
        }
        if(arr[ind]<=tar){
            ds.add(arr[ind]);
            sum_find(arr,tar-arr[ind],ind,ans,ds);
            ds.remove(ds.size()-1);
        }
        sum_find(arr,tar,ind+1,ans,ds);
    }
    
    
    
    
    
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> ans=new ArrayList<List<Integer>> ();
        sum_find(candidates,target,0,ans,new ArrayList<>());
        return ans;
        
        
    }
}
Tc-O(2^n)
sc-o(2^n)